<?php

require_once Blox::info('templates','dir').'/blog/blog.conf';

$titles = [
	1 => 'Заголовок параграфа.<div class="small">Заголовок всей страницы первого уровня<br>находится во внешнем шаблоне !page.</div>',
	2 => 'Текст (гипертекст)',
	3 => 'Фото <br><span class="small">допустимые форматы файлов jpg, gif, png, svg</span>',
	4 => 'Фото меньше', # скрыто
	5 => 'Подпись к фото',
    12=> 'Не отображать подпись',
	6 => 'Ширина фото, в процентах от ширины колонки',
	7 => 'Расположение фото',
	8 => 'Разрешить открывать фото в отдельном окне',
	11 => 'Фон, например белый: #fff',
];

$types = [
	1 => 'varchar(255)',
	2 => 'text',
	3 => 'file maxWidth(1100) maxHeight(900) quality(80) allowedFormats(gif,jpg,jpeg,png,svg) stamp(xfiles/stamp.png) format(jpg) destination(datafiles/blog/goods)',
	4 => 'file maxWidth(300) allowedFormats(gif,jpg,jpeg,png,svg) sourceField(3) quality(80) format(jpg) destination(datafiles/blog/goods)',
	5 => 'varchar(255)',
	6 => 'smallint(3) unsigned not null default 40',
	7 => "enum('влево','центр','вправо')",
	8 => 'tinyint(1) unsigned not null default 1',
	10 => 'smallint(6) unsigned', // ID категории
	11 => 'varchar(255)',
    12=> 'tinyint(1) unsigned not null default 0',
];

$notes = [
    12  => 'Подпись будет использоваться только в img[alt]',
];

$defaults[6] = 40;

$fields = [
    'hidden' => [10],
    'dont-convert-url' => [2],
];

$fields['dont-convert-url'];
    
$params = [
    'version' => '2.0.0',
	'multi-record' => true,
	'description' => 'Шаблон для статей. Каждая запись состоит из заголовка второго уровня, фото и текста. В шаблоне можно размещать любое количество фотографий (если продолжать текст в новой записи). После второго параграфа вставляется блок с ценами на КАМАЗы.<br><span class="red">Делайте первый параграф кратким, так как в режиме АНОНСЫ он будет использован на родительской странице.<span>',
];

# Экстраданные

$xtitles = [
	6 => 'Идентификатор комплекта блоков<br>с шаблонами blog/...',
	1 => 'Заголовок верхнего уровня',
	2 => 'Кол-во миниатюр в строке<br><span class="small">Записывается в виде набора классов Bootstrap<br>По умолчанию используются следующие классы:<br>col-xs-6 col-sm-4 col-md-3 col-lg-3</span>',
	3 => 'Показать внизу навигацию на соседние статьи',
	4 => 'Показать под заголовком<br>дату, категории, теги',
	5 => 'Доп. блок с другой функциональностью,<br>единый для всего блока',
    7 => 'Доп. блок поставить после параграфа:', # TODO: "-1" - после последнего (первого с конца), "-2" - после препоследнего. Пока просто ставь заведомо большое число
];

$xnotes = [
    1 => 'Если написать --, то ничего не выводится',
    6 => '<span style="color:red">Внимание!</span>. Если на сайте используется не один комплект блоков с шаблонами blog/..., то<br>в данные (допданные) каждого блока одного комплекта нужно добавить один и тот же идентификатор',
    7 => '1 — поставить после первого параграфа<br>0 — поставить до первого параграфа<br>null — не отображать<br>-1 — после последнего (еще не реализовано)<br>-2 — после предпоследнего (еще не реализовано)',
];

$xtypes = [
	1 => 'varchar(100)',
	2 => 'varchar(100)',
	3 => 'tinyint(1) unsigned not null default 0',
	4 => 'tinyint(1) unsigned not null default 0',
	5 => 'block(/)',
	6 => 'varchar(255)',
    7 => 'tinyint(4) default null',
];

$xfields = [
    'nullable' => [7],
];

$xkeys = 'UNIQUE(`rec-id`, `block-id`)';

$xdat = Dat::get($blockInfo, [], 'x');

if (!Blox::info('user','user-is-admin')) {
    $xfields['hidden'][] = 5;
    $xfields['hidden'][] = 6;
}

# Обработка данных

if (isset($_GET['edit'])) {
    $defaults[10] = Request::get($blockInfo['id'],'pick', 10, 'eq');
}


$complexId = $xdat[6];
if (isEmpty(Request::get($GLOBALS['blog/goods'][$complexId]['src-block-id'],'pick', 10, 'eq')))
    Request::add('block='.$GLOBALS['blog/goods'][$complexId]['src-block-id'].'&p[10]=0');


